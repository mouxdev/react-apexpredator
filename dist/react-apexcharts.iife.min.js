var ReactApexChart=function(){"use strict";const t=require("react"),e=require("apexpredator"),i=require("prop-types");window.ApexCharts=e;class r extends t.Component{constructor(e){super(e),t.createRef?this.chartRef=t.createRef():this.setRef=(t=>this.chartRef=t),this.chart=null}render(){const e=function(t,e){let i={...t};return e.forEach(t=>{delete i[t]}),i}(this.props,Object.keys(r.propTypes));return t.createElement("div",{ref:t.createRef?this.chartRef:this.setRef,...e})}componentDidMount(){const i=t.createRef?this.chartRef.current:this.chartRef;this.chart=new e(i,this.getConfig()),this.chart.render()}getConfig(){const{type:t,height:e,width:i,series:r,options:s}=this.props,n={chart:{type:t,height:e,width:i},series:r};return this.extend(s,n)}isObject(t){return t&&"object"==typeof t&&!Array.isArray(t)&&null!=t}extend(t,e){"function"!=typeof Object.assign&&(Object.assign=function(t){if(void 0===t||null===t)throw new TypeError("Cannot convert undefined or null to object");let e=Object(t);for(let t=1;t<arguments.length;t++){let i=arguments[t];if(void 0!==i&&null!==i)for(let t in i)i.hasOwnProperty(t)&&(e[t]=i[t])}return e});let i=Object.assign({},t);return this.isObject(t)&&this.isObject(e)&&Object.keys(e).forEach(r=>{this.isObject(e[r])&&r in t?i[r]=this.extend(t[r],e[r]):Object.assign(i,{[r]:e[r]})}),i}componentDidUpdate(t){if(!this.chart)return null;const{options:e,series:i,height:r,width:s}=this.props,n=JSON.stringify(t.options),h=JSON.stringify(t.series),o=JSON.stringify(e),c=JSON.stringify(i);n===o&&h===c&&r===t.height&&s===t.width||(h===c?this.chart.updateOptions(this.getConfig()):n===o&&r===t.height&&s===t.width?this.chart.updateSeries(i):this.chart.updateOptions(this.getConfig()))}componentWillUnmount(){this.chart&&"function"==typeof this.chart.destroy&&this.chart.destroy()}}return r.propTypes={type:i.string.isRequired,width:i.oneOfType([i.string,i.number]),height:i.oneOfType([i.string,i.number]),series:i.array.isRequired,options:i.object.isRequired},r.defaultProps={type:"line",width:"100%",height:"auto"},r}();
